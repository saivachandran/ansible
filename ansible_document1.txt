what is ansible 

Ansible is an open-source software provisioning, configuration management, and application-deployment tool. It runs on many linux Unix-like systems, and can configure both Unix-like systems as well as Microsoft Windows. It includes its own declarative language to describe system configuration. Wikipedia
License: Proprietary / GNU General Public License
Stable release: 2.9.6 / March 5, 2020; 20 days ago
Original author(s): Michael DeHaan
Developer(s): Ansible Community / Ansible Inc. / Red Hat Inc.
Operating system: Linux, Unix-like, MacOS, Windows
Written in: Python, PowerShell, Ruby

-----------------------------------------------------------------------------------------------------------

how ansible works

Ansible works by connecting to your nodes and pushing out small programs, called "Ansible modules" to them. ... Ansible then executes these modules (over SSH by default), and removes them when finished. Your library of modules can reside on any machine, and there are no servers, daemons, or databases required.
-----------------------------------------------------------------------------------------------------------
why we use ansible

Ansible automates and simplifies repetitive, complex, and tedious operations. Everybody likes it because it brings huge time savings when we install packages or configure large numbers of servers. Its architecture is simple and effective. It works by connecting to your nodes and pushing small programs to them

-----------------------------------------------------------------------------------------------------------
Advantages of Ansible

Very simple to set up and use: No special coding skills are necessary to use Ansible's playbooks (more on playbooks later). Powerful: Ansible lets you model even highly complex IT workflows. Flexible: You can orchestrate the entire application environment no matter where it's deployed

-------------------------------------------------------------------------------------------------------------

disadvantages of Ansible

is the lack of any notion of state. Ansible does not have any notion of state like other automation tools such as Puppet. Ansible does not track dependencies and simply executes sequential tasks and stops when tasks finish, fail, or any error comes
-----------------------------------------------------------------------------------------------------------

what is ansibe inventry

Ansible works against multiple systems in your infrastructure at the same time. It does this by selecting portions of systems listed in Ansible’s inventory file, which defaults to being saved in the location /etc/ansible/hosts. You can specify a different inventory file using the -i <path> option on the command line.
--------------------------------------------------------------------------------------------------------------
Ansible yaml
YAML (a recursive acronym for "YAML Ain't Markup Language") is a human-readable data-serialization language. It is commonly used for configuration files and in applications where data is being stored or transmitted.
-------------------------------------------------------------------------------------------

For Ansible, nearly every YAML file starts with a list. Each item in the list is a list of key/value pairs, commonly called a “hash” or a “dictionary”. So, we need to know how to write lists and dictionaries in YAML.

There’s another small quirk to YAML. All YAML files (regardless of their association with Ansible or not) can optionally begin with --- and end with .... This is part of the YAML format and indicates the start and end of a document.

All members of a list are lines beginning at the same indentation level starting with a "- " (a dash and a space)
----------------------------------------------------------------------------------------------------------------------
ansible palybook

An Ansible playbook is an organized unit of scripts that defines work for a server configuration managed by the automation tool Ansible. Ansible is a configuration management tool that automates the configuration of multiple servers by the use of Ansible playbooks. ... Ansible plays are written in YAML
-----------------------------------------------------------------------------------------------------
playbook

The goal of a play is to map a group of hosts to some well defined roles, represented by things ansible calls tasks. At a basic level, a task is nothing more than a call to an ansible module.

By composing a playbook of multiple ‘plays’, it is possible to orchestrate multi-machine deployments, running certain steps on all machines in the webservers group, then certain steps on the database server group, then more commands back on the webservers group, etc.
--------------------------------------------------------------------------------------------------------------------------------

ansible module

Ansible modules are reusable, standalone scripts that can be used by the Ansible API, or by the ansible or ansible-playbook programs. They return information to ansible by printing a JSON string to stdout before exiting. They take arguments in one of several ways which we'll go into as we work through this tutorial
---------------------------------------------------------------------------------------------------------------------------------- 

what is ansible handler why we usee handler

Handlers are just like regular tasks in an Ansible playbook (see Tasks) but are only run if the Task contains a notify directive and also indicates that it changed something. ... A host is simply a remote machine that Ansible manages. They can have individual variables assigned to them, and can also be organized in groups.

---------------------------------------------------------------------------------------------------------------------------
why we use handler in ansible

A Handler will take an action when called by an event it listens for. This is useful for secondary actions that might be required after running a Task, such as starting a new service after installation or reloading a service after a configuration change.
----------------------------------------------------------------------------------------------------------------------------

What is module in Ansible?

Ansible modules are reusable, standalone scripts that can be used by the Ansible API, or by the ansible or ansible-playbook programs. They return information to ansible by printing a JSON string to stdout before exiting. They take arguments in one of several ways which we'll go into as we work through this tutorial

-------------------------------------------------------------------------------------------------------------------------------

Where are Ansible modules stored?

Ansible. cfg file: Located by default at /etc/ansible/ansible. cfg, it has the necessary privilege escalation options and the location of the inventory file. Main file: A playbook that has modules that perform various tasks on a host listed in an inventory or host file.

------------------------------------------------------------------------------------------------------------------------------
Ansible loops

In computer programming, this is called a loop. Common Ansible loops include changing ownership on several files and/or directories with the file module, creating multiple users with the user module, and repeating a polling step until a certain result is reached. ... We added loop in Ansible 2.5.
--------------------------------------------------------------------------------------------------------------------------------
ansible role

Roles provide a framework for fully independent, or interdependent collections of variables, tasks, files, templates, and modules. In Ansible, the role is the primary mechanism for breaking a playbook into multiple files. This simplifies writing complex playbooks, and it makes them easier to reuse.

-------------------------------------------------------------------------------------------------------------------------------

ansible role
============
apache role ==> whatever require to run apache should be there in the role

roles ==> it's predefined straucture


roles components:
================

1.defaults==> defaults provide the data about role / defult variables stored here

2.files ==> static files what files we push to remote machine

3.handlers ==> like a trigger when changes made in the configuration file using notify command it will restart the service

4.meta ==> inforamtion about role like pacakege name owner

5.task ==> actual action like installing package, copying file 

6.template ==> dynamic files stored in template folder jinja2 template language

7. vars ==> boths vars and defaults stored in the vars but vars variabe have higher priority

-----------------------------------------------------------------------------------------------------

ansible vault

using ansible vault we can protect data encrypt and decrypt users data 

Ad-Hoc
=======
The Ad-Hoc command is the one-liner ansible command that performs one task on the target host. It allows you to execute simple one-line task against one or group of hosts defined on the inventory file configuration





